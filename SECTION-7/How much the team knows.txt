class Result {
  /*     
   * Complete the 'maxKnowledgeTeams' function below.
   * @params
   *   students -> number of students
   *   topics -> number of topics
   *   knowledge -> a 2-d integer list of size `students` rows and `topics` columns, 
   * 				where entry (i, j) is 1 if ith student knows the jth topic, 
   *				and 0 if he/she does not know
   *
   * Calculate and Print the required numbers in two lines.
   */
  public static void maxKnowledgeTeams(int students, int topics, List<List<Integer>> knowledge) {
    int maxSubject = 0;
    int maxTeam = 0;
    for(int i = 0; i < students-1; i++){
      for(int j = i+1; j<students; j++){
        int count = orOperationOfArr(knowledge.get(i),knowledge.get(j),topics);
        if(count > maxSubject){
          maxSubject = count;
          maxTeam = 1;
        }else if(count == maxSubject){
          maxTeam++;
        }
      }
    }
    System.out.println(maxSubject);
	System.out.println(maxTeam);
  }
  static int orOperationOfArr(List<Integer> list1, List<Integer> list2, int topics){
    int count = 0;
    for(int i = 0; i < list1.size(); i++){
      if(list1.get(i) == 1 || list2.get(i) == 1){
        count++;
      }
    }
    return count;
  }
}